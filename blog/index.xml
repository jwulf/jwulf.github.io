<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Josh Wulf</title>
    <link>https://joshwulf.com/blog/</link>
    <description>Recent content in Blog on Josh Wulf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 29 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://joshwulf.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Refactoring the Zeebe Node gRPC State Machine for Camunda Cloud: Part One</title>
      <link>https://joshwulf.com/blog/2020/02/camunda-cloud-connection/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/camunda-cloud-connection/</guid>
      <description>Preparing for the launch of Camunda Cloud, I turned on continuous integration testing for the Zeebe Node client against a running instance of a Camunda Cloud Zeebe cluster.
I was immediately forced to deal with something I&#39;d been conveniently ignoring:
Camunda Cloud gRPC connections always report failure initially, before eventually succeeding.
This is because the connection to Camunda Cloud is via a TLS-enabled Nginx reverse proxy with OAuth authentication. This causes the current gRPC client state machine to emit intermediate connection failure events before emitting an eventual &amp;ldquo;READY&amp;rdquo; state.</description>
    </item>
    
    <item>
      <title>A Functional Refactor of Zeebe Node with fp-ts</title>
      <link>https://joshwulf.com/blog/2020/02/functional-refactor/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/functional-refactor/</guid>
      <description>There is no such thing as good coding, only good refactoring.
 I recently did a bunch of work on the Zeebe Node.js client for the upcoming 0.23 release. Zeebe Node is a client library for the Zeebe Microservices Workflow Orchestration Engine, and I maintain it.
While doing other work, I took the opportunity to refactor one method, deployWorkflows, to add a feature that I wanted it to have. I used fp-ts, a TypeScript Functional Programming library to do it.</description>
    </item>
    
    <item>
      <title>Providing a Semantic API</title>
      <link>https://joshwulf.com/blog/2020/02/providing-a-semantic-api/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/providing-a-semantic-api/</guid>
      <description>This is part of a series of posts where I refactor code from StackOverflow questions, with a discussion of the changes. One of the great things about JavaScript is how scalable it is. You can start with a simple script, and there is nothing wrong with that. Usually these posts are about refactorings other than what the questioner asked about, and would be out of scope for the SO answer. There is nothing wrong with code that runs, and &amp;ldquo;There is no such thing as good coding, only good refactoring&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Shun the Mutant - the case for const</title>
      <link>https://joshwulf.com/blog/2020/02/shun-the-mutant/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/shun-the-mutant/</guid>
      <description>There are three ways you can declare and assign in JS in 2020:
let a = &amp;quot;Hello&amp;quot; var b = &amp;quot;World&amp;quot; const c = &amp;quot;!&amp;quot; These are &amp;ldquo;declarations with assignment&amp;rdquo;, as opposed to &amp;ldquo;declaration without assignment&amp;rdquo; - which can only be done with let and var:
let a; var b; const c; // has no meaning To understand the difference between let and var, you can refer to this excellent answer on StackOverflow.</description>
    </item>
    
    <item>
      <title>Avoiding global mutable state in browser JS</title>
      <link>https://joshwulf.com/blog/2020/02/avoid-global-state/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/avoid-global-state/</guid>
      <description>This is part of a series of posts where I refactor code from StackOverflow questions, with a discussion of the changes. One of the great things about JavaScript is how scalable it is. You can start with a simple script, and there is nothing wrong with that. Usually these posts are about refactorings other than what the questioner asked about, and would be out of scope for the SO answer.</description>
    </item>
    
    <item>
      <title>Just say No to loops and variables.</title>
      <link>https://joshwulf.com/blog/2020/02/just-say-no-to-loops-and-variables/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/just-say-no-to-loops-and-variables/</guid>
      <description>Recently, I spent some time on StackOverflow, helping people with their school assignments - I mean, serious programming questions they had at work. (I&#39;m pretty sure a fair whack of them were homework assignments).
One thing that came out of it - for me - was a pattern in the issues in the JavaScript programming tag (Discord bots are hot right now with the kids).
There are certain things that people struggle with when learning to program, and when learning to program in JS.</description>
    </item>
    
    <item>
      <title>Easily run multiple apps with HTTPS using Docker and LetsEncrypt</title>
      <link>https://joshwulf.com/blog/2020/02/docker-https/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/docker-https/</guid>
      <description>I frequently deploy Web APIs in Docker. On a single VM I might have up to five or six services running. All of them have TLS certificates and are accessible via port 443 using SNI — Server Name Indication, where the request is routed to the correct backend based on the domain name of the request.
This is very easy to set up using letsencrypt-nginx-sidecar, (which builds on this project and this project).</description>
    </item>
    
    <item>
      <title>How to write a GitHub Action</title>
      <link>https://joshwulf.com/blog/2020/02/creating-github-action/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/creating-github-action/</guid>
      <description>GitHub Actions are small, reusable modules of functionality that can participate in GitHub Workflows. You can add a GitHub workflow yaml file to any GitHub repo, and have it run in response to events like code pushes, pull requests - even arbitrary events posted to the repository&#39;s repository_dispatch REST endpoint over the GitHub API.
The obvious things they can be used for are running tests, linting code or rebuilding artifacts on check-in, creating releases, even deploying from a particular branch.</description>
    </item>
    
    <item>
      <title>20 Tips on travelling like a BOSS</title>
      <link>https://joshwulf.com/blog/2020/01/travel-tips/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/01/travel-tips/</guid>
      <description>Over the last 20 years, I&#39;ve done a fair amount of travel around the world. My first trip out of New Zealand on my own - in 1996, to Sydney - was a hot mess. I had no idea that you have to pass through a metal detector at the airport, and I rocked up with batteries, coins, a metal chain on my wallet, a Maglite torch, and a multi-headed screwdriver in my pockets.</description>
    </item>
    
    <item>
      <title>Zero-Scale Zeebe with Cloudflare Workers</title>
      <link>https://joshwulf.com/blog/2019/12/cloudflare-slack/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/12/cloudflare-slack/</guid>
      <description>I get questions about running Zeebe at &amp;ldquo;zero-scale&amp;rdquo;. That means workers that consume no resources when there are no tasks to perform.
The Zeebe service on Camunda Cloud includes a generic HTTP-Worker that can be used to achieve this. The HTTP-Worker polls for jobs of type &amp;ldquo;Camunda-HTTP&amp;rdquo;, and then invokes a REST endpoint based on the HTTP verb and URL set in the task headers. If you are not on Camunda Cloud you can use zeebe-http-worker, or just write your own.</description>
    </item>
    
    <item>
      <title>In Search of the Ultimate Keyboard Layout</title>
      <link>https://joshwulf.com/blog/2019/11/ultimate-keyboard/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/11/ultimate-keyboard/</guid>
      <description>In July of 2018, after 35 years of typing on QWERTY layout - 24 of those years touch-typing as a professional software developer and author, I switched to the Dvorak keyboard layout.
I couldn&#39;t tell you why I did it. I just did. At the time I was training for a physique competition (that will be another blog post). But I don&#39;t know if that had anything to do with it (maybe it was a low-carb moment&amp;hellip;).</description>
    </item>
    
    <item>
      <title>The Impact GitHub is Having on Your Software Career, Right Now…</title>
      <link>https://joshwulf.com/blog/2019/11/the-impact-github-is-having/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/11/the-impact-github-is-having/</guid>
      <description>Update 2019: This article was originally published on Medium.com on Feb 21, 2017, and got 183 comments on Reddit, and 237 comments on Hacker News. Many commenters said it couldn’t be done — they worked in closed source fintech shops, on BitBucket, and reasons&amp;hellip; So I quit my job as a recruiter, got a job at a closed source fintech on BitBucket, and got it done within 15 months — read about it on Open Source.</description>
    </item>
    
    <item>
      <title>How to modify Minecraft the easy way with TypeScript</title>
      <link>https://joshwulf.com/blog/2019/04/mod-minecraft/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/04/mod-minecraft/</guid>
      <description>Usually, modifying Minecraft requires coding in Java, and a lot of scaffolding. Now you can write and share Minecraft mods using TypeScript/Javascript.
ScriptCraft is an open source JavaScript Minecraft modding library, and we’ve written support for TypeScript, and a bunch of tooling to create a familiar developer experience for those coming from JavaScript land (including Yeoman and NPM).
In this article I’ll walk you through getting set up and building your first TypeScript Minecraft mod in under an hour — as little as 20 minutes, depending on your internet connection.</description>
    </item>
    
    <item>
      <title>Implementing a Maybe Pattern using a TypeScript Type Guard</title>
      <link>https://joshwulf.com/blog/2019/02/typescript-maybe/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/02/typescript-maybe/</guid>
      <description>You’re sat at a restaurant, and you order a beer. The waiter disappears into the kitchen, and returns a couple of minutes later, empty-handed. “I’m sorry,” he says. “I could not get your beer.”
Now here is the six-million dollar question: is the restaurant out of the beer that you ordered (business logic), or is the restaurant kitchen on fire (infrastructure failure)?
And how do you model those two distinct failure states in your API?</description>
    </item>
    
    <item>
      <title>Node.js client for Zeebe Microservices Orchestration Engine</title>
      <link>https://joshwulf.com/blog/2019/01/zeebe-node/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2019/01/zeebe-node/</guid>
      <description>Update: I now work at Camunda on Zeebe as the Node client maintainer and a Developer Advocate. Things have changed in the broker and the library since this was published - for the latest on using it, refer to my new book in development - &amp;ldquo;The Zeebe Node.js Client Guide&amp;quot;
I’m proud to announce that Credit Sense has open-sourced our Node.js client library for Zeebe. Check it out on GitHub and start using it now!</description>
    </item>
    
    <item>
      <title>Programming Quantum Computers with Q#</title>
      <link>https://joshwulf.com/blog/2018/09/programming-in-q#/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2018/09/programming-in-q#/</guid>
      <description>This week I’m at the NDC Developer Conference in Sydney. While here, I attended a workshop on programming Quantum computers using Q#, run by John Azariah, the creator of the Q# programming language.
We&amp;#39;re on Task 1.2 of the Q# quantum programming workshop. Linear vector algebra in multi-dimensional complex space... Entanglement and teleportation are coming. pic.twitter.com/wU7LVSeozv
&amp;mdash; Josh Wulf (Alt Super Meta) (@sitapati) September 19, 2018  Q# is a recently released Microsoft language specifically developed for programming quantum computer operations from a classical computer.</description>
    </item>
    
    <item>
      <title>CampJS IX — 2018</title>
      <link>https://joshwulf.com/blog/2018/08/campjs-ix/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2018/08/campjs-ix/</guid>
      <description>Classic #campjs pic.twitter.com/TmnmBMF0jG
&amp;mdash; Glen Arrowsmith (@garrows) August 10, 2018  My heartfelt thanks to the organisers and my fellow attendees at @campjs IX. It was a weekend of sleep deprivation of the body, and nourishment of the soul.
&amp;mdash; Josh Wulf (Alt Super Meta) (@sitapati) August 13, 2018  Take me back to #CampJS - a huge thank you to all the organisers; such a thoughtful, inclusive, highly entertaining and fun packed weekend.</description>
    </item>
    
    <item>
      <title>Big Data, Big Heart Hackathon</title>
      <link>https://joshwulf.com/blog/2017/11/big-data-big-heart/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/11/big-data-big-heart/</guid>
      <description>In October 2017, I had the absolute privilege of organising the CloudTrek Big Data, Big Heart Hackathon.
Cloud Trek’s MD, Neil Hitz, came to me with the idea for a Hackathon event that would have a humanitarian / social impact.
I used the training I got in the Landmark Self-Expression and Leadership Program to structure the event. In that program you do a project where you mobilise one community (the target community) to cause an impact in another community (the beneficiary community).</description>
    </item>
    
    <item>
      <title>JavaScript: Return considered harmful</title>
      <link>https://joshwulf.com/blog/2017/11/return-considered-harmful/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/11/return-considered-harmful/</guid>
      <description>JavaScript — the language of the Gods.
return — basically the GOTO statement of 2017_*_
_* T&amp;amp;C apply._
Born in the turbulent crucible of an asynchronous environment, with unpredictable response times and failure rates. For programmers coming from a traditional multi-threaded environment like Java or C#, JavaScript lives in strange and alien world where storms the size of entire planets rage, and lightning bolts pierce the ether.
The classic newbie mistake in JavaScript is to ask: “Why doesn’t this work?</description>
    </item>
    
    <item>
      <title>How to Recruit for your Startup: Tech Cofounder</title>
      <link>https://joshwulf.com/blog/2017/10/recruiting-tech-cofounder/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/10/recruiting-tech-cofounder/</guid>
      <description>I’m at the Investor Pitch night at The Triffid, in Brisbane’s Fortitude Valley. Apparently over 500 people have turned out for the event (someone says it is closer to 1000), and it is packed. Not even standing room. People are spilling out of the event space into the bar. Inside, Venture Capitalists are pitching a panel of startup founders — a reversal of the usual roles.
I make my way through the crowd.</description>
    </item>
    
    <item>
      <title>The Second System Effect and Scaleup Failure</title>
      <link>https://joshwulf.com/blog/2017/09/second-system-effect/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/09/second-system-effect/</guid>
      <description>This article was originally posted on Medium.com.
You validated your product-market fit. Your MVP was a hit. You even have paying customers (I already said that, right — it’s validated).
Then you started to develop the real deal, the product that built on your original success, while fixing the errors and short-cuts, and adding the cool new features — and it all fell apart.
So what the f*&amp;amp;# went wrong?</description>
    </item>
    
    <item>
      <title>Women in JavaScript</title>
      <link>https://joshwulf.com/blog/2017/08/women-in-js/</link>
      <pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/08/women-in-js/</guid>
      <description>Scene One: Camp JS viii Last weekend I was at Camp JS viii in Melbourne. Camp JS is a community-run event that brings together JavaScript hackers from around Australia for a weekend of fun, frolicking, and JavaScripting. This year’s one was the biggest ever, with 160 attendees and 32 talks. Amazing weekend.
 Cool iron-on patch and awesome Zine organised by Anna Gerber  I got to hang out more with my peeps from BrisJS -the Brisbane JavaScript Meetup- and meet other inspiring and creative developers from around Australia and New Zealand.</description>
    </item>
    
    <item>
      <title>Righto — async done right in JavaScript</title>
      <link>https://joshwulf.com/blog/2017/06/righto/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/06/righto/</guid>
      <description>If you program in server-side JavaScript there is no way that you can avoid dealing with asynchronous functions.
Callbacks, Promises, and async/await are some of the ways that you may have heard of dealing with asynchronous programming in JavaScript. But you may not have heard of Righto — literally the best library of all time for async programming in JS.
Kory Nunn’s Righto library is — according to him — way better than Promises and Async/Await combined.</description>
    </item>
    
    <item>
      <title>Biocentricism: How Life and Consciousness Are the Keys to Understanding the True Nature of the Universe</title>
      <link>https://joshwulf.com/blog/2017/05/biocentrism/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/05/biocentrism/</guid>
      <description>Today’s classic cut: here’s a book review I wrote in 2014 on Robert Lanza’s “Biocentrism: How Life and Consciousness Are the Keys to Understanding the True Nature of the Universe”. You’re welcome!
After reading a lot on relativity, quantum mechanics, and consciousness, this is the first book where I felt that the author had a solid grasp of all three and was able to bring something to the conversation.
The Western scientific revolution was predicated on an ontology of objective things that had an existence independent of observers.</description>
    </item>
    
    <item>
      <title>MCT1 covered on ABC News</title>
      <link>https://joshwulf.com/blog/2017/04/mct1-abc/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/04/mct1-abc/</guid>
      <description>MCT1 — Minecraft for Type One Diabetes — is an open-source project that produces a modified version of Minecraft that educates children and families living with Type 1 Diabetes.
On Sunday April 9, 2017, the project was featured on ABC News in Australia and Singapore.
We are currently working with QUT and Diabetes Queensland on the next phase of the project, community trials.
For more information, visit the MCT1 website.</description>
    </item>
    
    <item>
      <title>There is no good coding, only good refactoring</title>
      <link>https://joshwulf.com/blog/2017/04/no-good-coding/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/04/no-good-coding/</guid>
      <description>On a standard 101-key keyboard, there are 100 keys that increase technical debt, and only one key that reduces it.
 When you write code you produce functionality and technical debt. Refactoring code is the process of reducing technical debt while preserving functionality.
Yesterday, I spent the afternoon refactoring a method in one of the Magikcraft components.
I refactored it three or four times, extracting and consolidating pieces of logic.</description>
    </item>
    
    <item>
      <title>2017 Flight Centre Data Hackathon Winners</title>
      <link>https://joshwulf.com/blog/2017/03/flightcentre-hackathon/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2017/03/flightcentre-hackathon/</guid>
      <description>On 26 March, we took out second place in the 2017 Flight Centre Data Hackathon. Our team was a mix of engineers, designers, and business analysts from Magikcraft.io, Code Network, Just Digital People, and Just Media Design. A few of us have worked together on projects before, a few of us know each other but have never worked together on a project, and some of us met for the first time at Fishburners on the Friday night of the Hackathon.</description>
    </item>
    
  </channel>
</rss>