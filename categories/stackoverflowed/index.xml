<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stackoverflowed on Josh Wulf</title>
    <link>https://joshwulf.com/categories/stackoverflowed/</link>
    <description>Recent content in stackoverflowed on Josh Wulf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://joshwulf.com/categories/stackoverflowed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why Array.map</title>
      <link>https://joshwulf.com/blog/2020/03/why-array-map/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/03/why-array-map/</guid>
      <description>This is part of a series of posts where I refactor code from StackOverflow questions, with a discussion of the changes. One of the great things about JavaScript is how scalable it is. You can start with a simple script, and there is nothing wrong with that. Usually these posts are about refactorings other than what the questioner asked about, and would be out of scope for the SO answer. There is nothing wrong with code that runs, and &amp;ldquo;There is no such thing as good coding, only good refactoring&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Providing a Semantic API</title>
      <link>https://joshwulf.com/blog/2020/02/providing-a-semantic-api/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/providing-a-semantic-api/</guid>
      <description>This is part of a series of posts where I refactor code from StackOverflow questions, with a discussion of the changes. One of the great things about JavaScript is how scalable it is. You can start with a simple script, and there is nothing wrong with that. Usually these posts are about refactorings other than what the questioner asked about, and would be out of scope for the SO answer. There is nothing wrong with code that runs, and &amp;ldquo;There is no such thing as good coding, only good refactoring&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Shun the Mutant - the case for const</title>
      <link>https://joshwulf.com/blog/2020/02/shun-the-mutant/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/shun-the-mutant/</guid>
      <description>There are three ways you can declare and assign in JS in 2020:
let a = &amp;quot;Hello&amp;quot; var b = &amp;quot;World&amp;quot; const c = &amp;quot;!&amp;quot; These are &amp;ldquo;declarations with assignment&amp;rdquo;, as opposed to &amp;ldquo;declaration without assignment&amp;rdquo; - which can only be done with let and var:
let a; var b; const c; // has no meaning To understand the difference between let and var, you can refer to this excellent answer on StackOverflow.</description>
    </item>
    
    <item>
      <title>Avoiding global mutable state in browser JS</title>
      <link>https://joshwulf.com/blog/2020/02/avoid-global-state/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshwulf.com/blog/2020/02/avoid-global-state/</guid>
      <description>This is part of a series of posts where I refactor code from StackOverflow questions, with a discussion of the changes. One of the great things about JavaScript is how scalable it is. You can start with a simple script, and there is nothing wrong with that. Usually these posts are about refactorings other than what the questioner asked about, and would be out of scope for the SO answer.</description>
    </item>
    
  </channel>
</rss>